# Makefile.in generated by automake 1.10.2 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
sbin_PROGRAMS = mind$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/mind_config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(sbindir)"
sbinPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(sbin_PROGRAMS)
am__mind_SOURCES_DIST = String.cpp String.hpp FDTunnel.cpp \
	FDTunnel.hpp ConnectionHandler.cpp ConnectionHandler.hpp \
	DataBuffer.cpp DataBuffer.hpp HTTPHeader.cpp HTTPHeader.hpp \
	ContentFilter.cpp ContentFilter.hpp RegExp.cpp RegExp.hpp \
	FDFuncs.cpp FDFuncs.hpp BaseSocket.cpp BaseSocket.hpp \
	Socket.cpp Socket.hpp FatController.cpp FatController.hpp \
	UDSocket.cpp UDSocket.hpp SysV.cpp SysV.hpp ListContainer.cpp \
	ListContainer.hpp Auth.cpp Auth.hpp HTMLTemplate.cpp \
	HTMLTemplate.hpp LanguageContainer.cpp LanguageContainer.hpp \
	DynamicURLList.cpp DynamicURLList.hpp DynamicIPList.cpp \
	DynamicIPList.hpp ImageContainer.cpp ImageContainer.hpp \
	IPList.cpp IPList.hpp OptionContainer.cpp OptionContainer.hpp \
	FOptionContainer.cpp FOptionContainer.hpp ListManager.cpp \
	ListManager.hpp md5.cpp md5.hpp DownloadManager.cpp \
	DownloadManager.hpp ConfigVar.cpp ConfigVar.hpp \
	ContentScanner.cpp ContentScanner.hpp SocketArray.cpp \
	SocketArray.hpp mind.cpp Plugin.hpp \
	contentscanners/clamav.cpp contentscanners/icapscan.cpp \
	contentscanners/kavdscan.cpp contentscanners/clamdscan.cpp \
	contentscanners/commandlinescan.cpp \
	downloadmanagers/default.cpp downloadmanagers/fancy.cpp \
	downloadmanagers/trickle.cpp authplugins/proxy.cpp \
	authplugins/ident.cpp authplugins/ip.cpp authplugins/ntlm.cpp \
	authplugins/digest.cpp Logger.cpp Logger.hpp
@HAVE_CLAMAV_TRUE@am__objects_1 = mind-clamav.$(OBJEXT)
@ENABLE_ICAP_TRUE@am__objects_2 = mind-icapscan.$(OBJEXT)
@ENABLE_KAVD_TRUE@am__objects_3 = mind-kavdscan.$(OBJEXT)
@ENABLE_CLAMD_TRUE@am__objects_4 = mind-clamdscan.$(OBJEXT)
@ENABLE_COMMANDLINE_TRUE@am__objects_5 = mind-commandlinescan.$(OBJEXT)
am__objects_6 = mind-default.$(OBJEXT)
@ENABLE_FANCYDM_TRUE@am__objects_7 = mind-fancy.$(OBJEXT)
@ENABLE_TRICKLEDM_TRUE@am__objects_8 = mind-trickle.$(OBJEXT)
am__objects_9 = mind-proxy.$(OBJEXT)
am__objects_10 = mind-ident.$(OBJEXT)
am__objects_11 = mind-ip.$(OBJEXT)
@ENABLE_NTLM_TRUE@am__objects_12 = mind-ntlm.$(OBJEXT)
am__objects_13 = mind-digest.$(OBJEXT)
am_mind_OBJECTS = mind-String.$(OBJEXT) \
	mind-FDTunnel.$(OBJEXT) \
	mind-ConnectionHandler.$(OBJEXT) \
	mind-DataBuffer.$(OBJEXT) \
	mind-HTTPHeader.$(OBJEXT) \
	mind-ContentFilter.$(OBJEXT) \
	mind-RegExp.$(OBJEXT) mind-FDFuncs.$(OBJEXT) \
	mind-BaseSocket.$(OBJEXT) \
	mind-Socket.$(OBJEXT) \
	mind-FatController.$(OBJEXT) \
	mind-UDSocket.$(OBJEXT) mind-SysV.$(OBJEXT) \
	mind-ListContainer.$(OBJEXT) \
	mind-Auth.$(OBJEXT) \
	mind-HTMLTemplate.$(OBJEXT) \
	mind-LanguageContainer.$(OBJEXT) \
	mind-DynamicURLList.$(OBJEXT) \
	mind-DynamicIPList.$(OBJEXT) \
	mind-ImageContainer.$(OBJEXT) \
	mind-IPList.$(OBJEXT) \
	mind-OptionContainer.$(OBJEXT) \
	mind-FOptionContainer.$(OBJEXT) \
	mind-ListManager.$(OBJEXT) mind-md5.$(OBJEXT) \
	mind-DownloadManager.$(OBJEXT) \
	mind-ConfigVar.$(OBJEXT) \
	mind-ContentScanner.$(OBJEXT) \
	mind-SocketArray.$(OBJEXT) \
        mind-Logger.$(OBJEXT) \
	mind-mind.$(OBJEXT) $(am__objects_1) \
	$(am__objects_2) $(am__objects_3) $(am__objects_4) \
	$(am__objects_5) $(am__objects_6) $(am__objects_7) \
	$(am__objects_8) $(am__objects_9) $(am__objects_10) \
	$(am__objects_11) $(am__objects_12) $(am__objects_13)
mind_OBJECTS = $(am_mind_OBJECTS)
am__DEPENDENCIES_1 =
mind_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
mind_LINK = $(CXXLD) $(mind_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(mind_SOURCES)
DIST_SOURCES = $(am__mind_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CLAMAVSHM = @CLAMAVSHM@
CLAMAVSUPPORT = @CLAMAVSUPPORT@
CLAMAV_CFLAGS = @CLAMAV_CFLAGS@
CLAMAV_LIBS = @CLAMAV_LIBS@
CLAMDSUPPORT = @CLAMDSUPPORT@
COMMANDLINESUPPORT = @COMMANDLINESUPPORT@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DGBINDIR = @DGBINDIR@
DGCONFDIR = @DGCONFDIR@
DGCONFFILE = @DGCONFFILE@
DGDATADIR = @DGDATADIR@
DGLIBDIR = @DGLIBDIR@
DGLOGLOCATION = @DGLOGLOCATION@
DGPIDDIR = @DGPIDDIR@
DGPROXYGROUP = @DGPROXYGROUP@
DGPROXYUSER = @DGPROXYUSER@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EMAILSUPPORT = @EMAILSUPPORT@
EXEEXT = @EXEEXT@
FANCYSUPPORT = @FANCYSUPPORT@
GREP = @GREP@
ICAPSUPPORT = @ICAPSUPPORT@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KAVAVSUPPORT = @KAVAVSUPPORT@
KAVDSUPPORT = @KAVDSUPPORT@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NTLMSUPPORT = @NTLMSUPPORT@
OBJEXT = @OBJEXT@
ORIGIPSUPPORT = @ORIGIPSUPPORT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PCRE_CFLAGS = @PCRE_CFLAGS@
PCRE_LIBS = @PCRE_LIBS@
PKG_CONFIG = @PKG_CONFIG@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TRICKLESUPPORT = @TRICKLESUPPORT@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
clean_SUBDIRS = . downloadmanagers contentscanners authplugins
@HAVE_CLAMAV_FALSE@CLAMAV_SOURCE = 

# A MASSIVE thank you to Lawrence Manning for pointing out the
# -export-dynamic option was needed to solve a long problem
# which stopped DG2.9 from actually running ever.
# Daniel Barron Fri 18th March 2005

# Unfortunately, since it was never made to work on anything
# other than Linux, libtool support has been removed in favour
# of configure-time options (at DB's request).
@HAVE_CLAMAV_TRUE@CLAMAV_SOURCE = contentscanners/clamav.cpp
@ENABLE_CLAMD_FALSE@CLAMDSCAN_SOURCE = 

#if HAVE_KAVCLIENT
#KAVAV_SOURCES = contentscanners/kavav.cpp
#else
#KAVAV_SOURCES =
#endif
@ENABLE_CLAMD_TRUE@CLAMDSCAN_SOURCE = contentscanners/clamdscan.cpp
@ENABLE_ICAP_FALSE@ICAPSCAN_SOURCE = 
@ENABLE_ICAP_TRUE@ICAPSCAN_SOURCE = contentscanners/icapscan.cpp
@ENABLE_KAVD_FALSE@KAVDSCAN_SOURCE = 
@ENABLE_KAVD_TRUE@KAVDSCAN_SOURCE = contentscanners/kavdscan.cpp
@ENABLE_COMMANDLINE_FALSE@COMMANDLINE_SOURCE = 
@ENABLE_COMMANDLINE_TRUE@COMMANDLINE_SOURCE = contentscanners/commandlinescan.cpp
DEFAULTDM_SOURCE = downloadmanagers/default.cpp
@ENABLE_FANCYDM_FALSE@FANCYDM_SOURCE = 
@ENABLE_FANCYDM_TRUE@FANCYDM_SOURCE = downloadmanagers/fancy.cpp
@ENABLE_TRICKLEDM_FALSE@TRICKLEDM_SOURCE = 
@ENABLE_TRICKLEDM_TRUE@TRICKLEDM_SOURCE = downloadmanagers/trickle.cpp
PROXYAUTH_SOURCE = authplugins/proxy.cpp
IDENTAUTH_SOURCE = authplugins/ident.cpp
IPAUTH_SOURCE = authplugins/ip.cpp
DIGESTAUTH_SOURCE = authplugins/digest.cpp
@ENABLE_NTLM_FALSE@NTLMAUTH_SOURCE = 
@ENABLE_NTLM_TRUE@NTLMAUTH_SOURCE = authplugins/ntlm.cpp
mind_CXXFLAGS = $(PCRE_CFLAGS) $(CLAMAV_CFLAGS) $(AM_CXXFLAGS)
mind_LDADD = $(PCRE_LIBS) $(CLAMAV_LIBS) $(AM_LIBS)
mind_CPPFLAGS = -D__CONFFILE='"$(DGCONFFILE)"' \
			-D__LOGLOCATION='"$(DGLOGLOCATION)/"' \
			-D__PIDDIR='"$(DGPIDDIR)"' \
			-D__PROXYUSER='"$(DGPROXYUSER)"' \
			-D__PROXYGROUP='"$(DGPROXYGROUP)"' \
			-D__CONFDIR='"$(DGCONFDIR)"' \
			$(AM_CPPFLAGS)

mind_SOURCES = String.cpp String.hpp \
                       FDTunnel.cpp FDTunnel.hpp \
                       ConnectionHandler.cpp ConnectionHandler.hpp \
                       DataBuffer.cpp DataBuffer.hpp \
                       HTTPHeader.cpp HTTPHeader.hpp \
                       ContentFilter.cpp ContentFilter.hpp \
                       RegExp.cpp RegExp.hpp \
		       FDFuncs.cpp FDFuncs.hpp \
		       BaseSocket.cpp BaseSocket.hpp \
                       Socket.cpp Socket.hpp \
                       FatController.cpp FatController.hpp \
                       UDSocket.cpp UDSocket.hpp \
                       SysV.cpp SysV.hpp \
                       ListContainer.cpp ListContainer.hpp \
                       Auth.cpp Auth.hpp \
                       HTMLTemplate.cpp HTMLTemplate.hpp \
                       LanguageContainer.cpp LanguageContainer.hpp \
                       DynamicURLList.cpp DynamicURLList.hpp \
		       DynamicIPList.cpp DynamicIPList.hpp \
                       ImageContainer.cpp ImageContainer.hpp \
		       IPList.cpp IPList.hpp \
                       OptionContainer.cpp OptionContainer.hpp \
                       FOptionContainer.cpp FOptionContainer.hpp \
                       ListManager.cpp ListManager.hpp \
                       md5.cpp md5.hpp \
                       DownloadManager.cpp DownloadManager.hpp \
                       ConfigVar.cpp ConfigVar.hpp \
                       ContentScanner.cpp ContentScanner.hpp \
		       SocketArray.cpp SocketArray.hpp \
                       Logger.cpp Logger.hpp \
                       mind.cpp \
		       Plugin.hpp \
		       $(CLAMAV_SOURCE) $(ICAPSCAN_SOURCE) \
		       $(KAVDSCAN_SOURCE) $(CLAMDSCAN_SOURCE) \
		       $(COMMANDLINE_SOURCE) \
		       $(DEFAULTDM_SOURCE) $(FANCYDM_SOURCE) \
		       $(TRICKLEDM_SOURCE) $(PROXYAUTH_SOURCE) \
		       $(IDENTAUTH_SOURCE) $(IPAUTH_SOURCE) \
		       $(NTLMAUTH_SOURCE) $(DIGESTAUTH_SOURCE)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(sbindir)" || $(MKDIR_P) "$(DESTDIR)$(sbindir)"
	@list='$(sbin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(sbinPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(sbindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(sbinPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(sbindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(sbindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(sbindir)/$$f"; \
	done

clean-sbinPROGRAMS:
	-test -z "$(sbin_PROGRAMS)" || rm -f $(sbin_PROGRAMS)
mind$(EXEEXT): $(mind_OBJECTS) $(mind_DEPENDENCIES) 
	@rm -f mind$(EXEEXT)
	$(mind_LINK) $(mind_OBJECTS) $(mind_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-Auth.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-BaseSocket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-ConfigVar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-ConnectionHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-ContentScanner.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-DataBuffer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-DownloadManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-DynamicIPList.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-DynamicURLList.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-FDFuncs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-FDTunnel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-FOptionContainer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-FatController.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-HTMLTemplate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-HTTPHeader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-IPList.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-ImageContainer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-LanguageContainer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-ListContainer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-ListManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-ContentFilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-OptionContainer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-RegExp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-Socket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-SocketArray.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-String.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-SysV.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-UDSocket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-clamav.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-clamdscan.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-commandlinescan.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-mind.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-default.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-digest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-fancy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-icapscan.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-ident.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-ip.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-kavdscan.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-md5.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-ntlm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-proxy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mind-trickle.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

mind-String.o: String.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-String.o -MD -MP -MF $(DEPDIR)/mind-String.Tpo -c -o mind-String.o `test -f 'String.cpp' || echo '$(srcdir)/'`String.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-String.Tpo $(DEPDIR)/mind-String.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='String.cpp' object='mind-String.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-String.o `test -f 'String.cpp' || echo '$(srcdir)/'`String.cpp

mind-String.obj: String.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-String.obj -MD -MP -MF $(DEPDIR)/mind-String.Tpo -c -o mind-String.obj `if test -f 'String.cpp'; then $(CYGPATH_W) 'String.cpp'; else $(CYGPATH_W) '$(srcdir)/String.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-String.Tpo $(DEPDIR)/mind-String.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='String.cpp' object='mind-String.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-String.obj `if test -f 'String.cpp'; then $(CYGPATH_W) 'String.cpp'; else $(CYGPATH_W) '$(srcdir)/String.cpp'; fi`

mind-FDTunnel.o: FDTunnel.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-FDTunnel.o -MD -MP -MF $(DEPDIR)/mind-FDTunnel.Tpo -c -o mind-FDTunnel.o `test -f 'FDTunnel.cpp' || echo '$(srcdir)/'`FDTunnel.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-FDTunnel.Tpo $(DEPDIR)/mind-FDTunnel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FDTunnel.cpp' object='mind-FDTunnel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-FDTunnel.o `test -f 'FDTunnel.cpp' || echo '$(srcdir)/'`FDTunnel.cpp

mind-FDTunnel.obj: FDTunnel.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-FDTunnel.obj -MD -MP -MF $(DEPDIR)/mind-FDTunnel.Tpo -c -o mind-FDTunnel.obj `if test -f 'FDTunnel.cpp'; then $(CYGPATH_W) 'FDTunnel.cpp'; else $(CYGPATH_W) '$(srcdir)/FDTunnel.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-FDTunnel.Tpo $(DEPDIR)/mind-FDTunnel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FDTunnel.cpp' object='mind-FDTunnel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-FDTunnel.obj `if test -f 'FDTunnel.cpp'; then $(CYGPATH_W) 'FDTunnel.cpp'; else $(CYGPATH_W) '$(srcdir)/FDTunnel.cpp'; fi`

mind-ConnectionHandler.o: ConnectionHandler.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-ConnectionHandler.o -MD -MP -MF $(DEPDIR)/mind-ConnectionHandler.Tpo -c -o mind-ConnectionHandler.o `test -f 'ConnectionHandler.cpp' || echo '$(srcdir)/'`ConnectionHandler.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-ConnectionHandler.Tpo $(DEPDIR)/mind-ConnectionHandler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ConnectionHandler.cpp' object='mind-ConnectionHandler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-ConnectionHandler.o `test -f 'ConnectionHandler.cpp' || echo '$(srcdir)/'`ConnectionHandler.cpp

mind-ConnectionHandler.obj: ConnectionHandler.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-ConnectionHandler.obj -MD -MP -MF $(DEPDIR)/mind-ConnectionHandler.Tpo -c -o mind-ConnectionHandler.obj `if test -f 'ConnectionHandler.cpp'; then $(CYGPATH_W) 'ConnectionHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionHandler.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-ConnectionHandler.Tpo $(DEPDIR)/mind-ConnectionHandler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ConnectionHandler.cpp' object='mind-ConnectionHandler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-ConnectionHandler.obj `if test -f 'ConnectionHandler.cpp'; then $(CYGPATH_W) 'ConnectionHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/ConnectionHandler.cpp'; fi`

mind-DataBuffer.o: DataBuffer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-DataBuffer.o -MD -MP -MF $(DEPDIR)/mind-DataBuffer.Tpo -c -o mind-DataBuffer.o `test -f 'DataBuffer.cpp' || echo '$(srcdir)/'`DataBuffer.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-DataBuffer.Tpo $(DEPDIR)/mind-DataBuffer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DataBuffer.cpp' object='mind-DataBuffer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-DataBuffer.o `test -f 'DataBuffer.cpp' || echo '$(srcdir)/'`DataBuffer.cpp

mind-DataBuffer.obj: DataBuffer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-DataBuffer.obj -MD -MP -MF $(DEPDIR)/mind-DataBuffer.Tpo -c -o mind-DataBuffer.obj `if test -f 'DataBuffer.cpp'; then $(CYGPATH_W) 'DataBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/DataBuffer.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-DataBuffer.Tpo $(DEPDIR)/mind-DataBuffer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DataBuffer.cpp' object='mind-DataBuffer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-DataBuffer.obj `if test -f 'DataBuffer.cpp'; then $(CYGPATH_W) 'DataBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/DataBuffer.cpp'; fi`

mind-HTTPHeader.o: HTTPHeader.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-HTTPHeader.o -MD -MP -MF $(DEPDIR)/mind-HTTPHeader.Tpo -c -o mind-HTTPHeader.o `test -f 'HTTPHeader.cpp' || echo '$(srcdir)/'`HTTPHeader.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-HTTPHeader.Tpo $(DEPDIR)/mind-HTTPHeader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='HTTPHeader.cpp' object='mind-HTTPHeader.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-HTTPHeader.o `test -f 'HTTPHeader.cpp' || echo '$(srcdir)/'`HTTPHeader.cpp

mind-HTTPHeader.obj: HTTPHeader.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-HTTPHeader.obj -MD -MP -MF $(DEPDIR)/mind-HTTPHeader.Tpo -c -o mind-HTTPHeader.obj `if test -f 'HTTPHeader.cpp'; then $(CYGPATH_W) 'HTTPHeader.cpp'; else $(CYGPATH_W) '$(srcdir)/HTTPHeader.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-HTTPHeader.Tpo $(DEPDIR)/mind-HTTPHeader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='HTTPHeader.cpp' object='mind-HTTPHeader.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-HTTPHeader.obj `if test -f 'HTTPHeader.cpp'; then $(CYGPATH_W) 'HTTPHeader.cpp'; else $(CYGPATH_W) '$(srcdir)/HTTPHeader.cpp'; fi`

mind-ContentFilter.o: ContentFilter.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-ContentFilter.o -MD -MP -MF $(DEPDIR)/mind-ContentFilter.Tpo -c -o mind-ContentFilter.o `test -f 'ContentFilter.cpp' || echo '$(srcdir)/'`ContentFilter.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-ContentFilter.Tpo $(DEPDIR)/mind-ContentFilter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ContentFilter.cpp' object='mind-ContentFilter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-ContentFilter.o `test -f 'ContentFilter.cpp' || echo '$(srcdir)/'`ContentFilter.cpp

mind-ContentFilter.obj: ContentFilter.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-ContentFilter.obj -MD -MP -MF $(DEPDIR)/mind-ContentFilter.Tpo -c -o mind-ContentFilter.obj `if test -f 'ContentFilter.cpp'; then $(CYGPATH_W) 'ContentFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/ContentFilter.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-ContentFilter.Tpo $(DEPDIR)/mind-ContentFilter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ContentFilter.cpp' object='mind-ContentFilter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-ContentFilter.obj `if test -f 'ContentFilter.cpp'; then $(CYGPATH_W) 'ContentFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/ContentFilter.cpp'; fi`

mind-RegExp.o: RegExp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-RegExp.o -MD -MP -MF $(DEPDIR)/mind-RegExp.Tpo -c -o mind-RegExp.o `test -f 'RegExp.cpp' || echo '$(srcdir)/'`RegExp.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-RegExp.Tpo $(DEPDIR)/mind-RegExp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RegExp.cpp' object='mind-RegExp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-RegExp.o `test -f 'RegExp.cpp' || echo '$(srcdir)/'`RegExp.cpp

mind-RegExp.obj: RegExp.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-RegExp.obj -MD -MP -MF $(DEPDIR)/mind-RegExp.Tpo -c -o mind-RegExp.obj `if test -f 'RegExp.cpp'; then $(CYGPATH_W) 'RegExp.cpp'; else $(CYGPATH_W) '$(srcdir)/RegExp.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-RegExp.Tpo $(DEPDIR)/mind-RegExp.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RegExp.cpp' object='mind-RegExp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-RegExp.obj `if test -f 'RegExp.cpp'; then $(CYGPATH_W) 'RegExp.cpp'; else $(CYGPATH_W) '$(srcdir)/RegExp.cpp'; fi`

mind-FDFuncs.o: FDFuncs.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-FDFuncs.o -MD -MP -MF $(DEPDIR)/mind-FDFuncs.Tpo -c -o mind-FDFuncs.o `test -f 'FDFuncs.cpp' || echo '$(srcdir)/'`FDFuncs.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-FDFuncs.Tpo $(DEPDIR)/mind-FDFuncs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FDFuncs.cpp' object='mind-FDFuncs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-FDFuncs.o `test -f 'FDFuncs.cpp' || echo '$(srcdir)/'`FDFuncs.cpp

mind-FDFuncs.obj: FDFuncs.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-FDFuncs.obj -MD -MP -MF $(DEPDIR)/mind-FDFuncs.Tpo -c -o mind-FDFuncs.obj `if test -f 'FDFuncs.cpp'; then $(CYGPATH_W) 'FDFuncs.cpp'; else $(CYGPATH_W) '$(srcdir)/FDFuncs.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-FDFuncs.Tpo $(DEPDIR)/mind-FDFuncs.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FDFuncs.cpp' object='mind-FDFuncs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-FDFuncs.obj `if test -f 'FDFuncs.cpp'; then $(CYGPATH_W) 'FDFuncs.cpp'; else $(CYGPATH_W) '$(srcdir)/FDFuncs.cpp'; fi`

mind-BaseSocket.o: BaseSocket.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-BaseSocket.o -MD -MP -MF $(DEPDIR)/mind-BaseSocket.Tpo -c -o mind-BaseSocket.o `test -f 'BaseSocket.cpp' || echo '$(srcdir)/'`BaseSocket.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-BaseSocket.Tpo $(DEPDIR)/mind-BaseSocket.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BaseSocket.cpp' object='mind-BaseSocket.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-BaseSocket.o `test -f 'BaseSocket.cpp' || echo '$(srcdir)/'`BaseSocket.cpp

mind-BaseSocket.obj: BaseSocket.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-BaseSocket.obj -MD -MP -MF $(DEPDIR)/mind-BaseSocket.Tpo -c -o mind-BaseSocket.obj `if test -f 'BaseSocket.cpp'; then $(CYGPATH_W) 'BaseSocket.cpp'; else $(CYGPATH_W) '$(srcdir)/BaseSocket.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-BaseSocket.Tpo $(DEPDIR)/mind-BaseSocket.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BaseSocket.cpp' object='mind-BaseSocket.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-BaseSocket.obj `if test -f 'BaseSocket.cpp'; then $(CYGPATH_W) 'BaseSocket.cpp'; else $(CYGPATH_W) '$(srcdir)/BaseSocket.cpp'; fi`

mind-Socket.o: Socket.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-Socket.o -MD -MP -MF $(DEPDIR)/mind-Socket.Tpo -c -o mind-Socket.o `test -f 'Socket.cpp' || echo '$(srcdir)/'`Socket.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-Socket.Tpo $(DEPDIR)/mind-Socket.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Socket.cpp' object='mind-Socket.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-Socket.o `test -f 'Socket.cpp' || echo '$(srcdir)/'`Socket.cpp

mind-Socket.obj: Socket.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-Socket.obj -MD -MP -MF $(DEPDIR)/mind-Socket.Tpo -c -o mind-Socket.obj `if test -f 'Socket.cpp'; then $(CYGPATH_W) 'Socket.cpp'; else $(CYGPATH_W) '$(srcdir)/Socket.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-Socket.Tpo $(DEPDIR)/mind-Socket.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Socket.cpp' object='mind-Socket.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-Socket.obj `if test -f 'Socket.cpp'; then $(CYGPATH_W) 'Socket.cpp'; else $(CYGPATH_W) '$(srcdir)/Socket.cpp'; fi`

mind-FatController.o: FatController.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-FatController.o -MD -MP -MF $(DEPDIR)/mind-FatController.Tpo -c -o mind-FatController.o `test -f 'FatController.cpp' || echo '$(srcdir)/'`FatController.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-FatController.Tpo $(DEPDIR)/mind-FatController.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FatController.cpp' object='mind-FatController.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-FatController.o `test -f 'FatController.cpp' || echo '$(srcdir)/'`FatController.cpp

mind-FatController.obj: FatController.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-FatController.obj -MD -MP -MF $(DEPDIR)/mind-FatController.Tpo -c -o mind-FatController.obj `if test -f 'FatController.cpp'; then $(CYGPATH_W) 'FatController.cpp'; else $(CYGPATH_W) '$(srcdir)/FatController.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-FatController.Tpo $(DEPDIR)/mind-FatController.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FatController.cpp' object='mind-FatController.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-FatController.obj `if test -f 'FatController.cpp'; then $(CYGPATH_W) 'FatController.cpp'; else $(CYGPATH_W) '$(srcdir)/FatController.cpp'; fi`

mind-UDSocket.o: UDSocket.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-UDSocket.o -MD -MP -MF $(DEPDIR)/mind-UDSocket.Tpo -c -o mind-UDSocket.o `test -f 'UDSocket.cpp' || echo '$(srcdir)/'`UDSocket.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-UDSocket.Tpo $(DEPDIR)/mind-UDSocket.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UDSocket.cpp' object='mind-UDSocket.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-UDSocket.o `test -f 'UDSocket.cpp' || echo '$(srcdir)/'`UDSocket.cpp

mind-UDSocket.obj: UDSocket.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-UDSocket.obj -MD -MP -MF $(DEPDIR)/mind-UDSocket.Tpo -c -o mind-UDSocket.obj `if test -f 'UDSocket.cpp'; then $(CYGPATH_W) 'UDSocket.cpp'; else $(CYGPATH_W) '$(srcdir)/UDSocket.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-UDSocket.Tpo $(DEPDIR)/mind-UDSocket.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='UDSocket.cpp' object='mind-UDSocket.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-UDSocket.obj `if test -f 'UDSocket.cpp'; then $(CYGPATH_W) 'UDSocket.cpp'; else $(CYGPATH_W) '$(srcdir)/UDSocket.cpp'; fi`

mind-SysV.o: SysV.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-SysV.o -MD -MP -MF $(DEPDIR)/mind-SysV.Tpo -c -o mind-SysV.o `test -f 'SysV.cpp' || echo '$(srcdir)/'`SysV.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-SysV.Tpo $(DEPDIR)/mind-SysV.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SysV.cpp' object='mind-SysV.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-SysV.o `test -f 'SysV.cpp' || echo '$(srcdir)/'`SysV.cpp

mind-SysV.obj: SysV.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-SysV.obj -MD -MP -MF $(DEPDIR)/mind-SysV.Tpo -c -o mind-SysV.obj `if test -f 'SysV.cpp'; then $(CYGPATH_W) 'SysV.cpp'; else $(CYGPATH_W) '$(srcdir)/SysV.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-SysV.Tpo $(DEPDIR)/mind-SysV.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SysV.cpp' object='mind-SysV.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-SysV.obj `if test -f 'SysV.cpp'; then $(CYGPATH_W) 'SysV.cpp'; else $(CYGPATH_W) '$(srcdir)/SysV.cpp'; fi`

mind-ListContainer.o: ListContainer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-ListContainer.o -MD -MP -MF $(DEPDIR)/mind-ListContainer.Tpo -c -o mind-ListContainer.o `test -f 'ListContainer.cpp' || echo '$(srcdir)/'`ListContainer.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-ListContainer.Tpo $(DEPDIR)/mind-ListContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ListContainer.cpp' object='mind-ListContainer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-ListContainer.o `test -f 'ListContainer.cpp' || echo '$(srcdir)/'`ListContainer.cpp

mind-ListContainer.obj: ListContainer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-ListContainer.obj -MD -MP -MF $(DEPDIR)/mind-ListContainer.Tpo -c -o mind-ListContainer.obj `if test -f 'ListContainer.cpp'; then $(CYGPATH_W) 'ListContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/ListContainer.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-ListContainer.Tpo $(DEPDIR)/mind-ListContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ListContainer.cpp' object='mind-ListContainer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-ListContainer.obj `if test -f 'ListContainer.cpp'; then $(CYGPATH_W) 'ListContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/ListContainer.cpp'; fi`

mind-Auth.o: Auth.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-Auth.o -MD -MP -MF $(DEPDIR)/mind-Auth.Tpo -c -o mind-Auth.o `test -f 'Auth.cpp' || echo '$(srcdir)/'`Auth.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-Auth.Tpo $(DEPDIR)/mind-Auth.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Auth.cpp' object='mind-Auth.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-Auth.o `test -f 'Auth.cpp' || echo '$(srcdir)/'`Auth.cpp

mind-Auth.obj: Auth.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-Auth.obj -MD -MP -MF $(DEPDIR)/mind-Auth.Tpo -c -o mind-Auth.obj `if test -f 'Auth.cpp'; then $(CYGPATH_W) 'Auth.cpp'; else $(CYGPATH_W) '$(srcdir)/Auth.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-Auth.Tpo $(DEPDIR)/mind-Auth.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Auth.cpp' object='mind-Auth.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-Auth.obj `if test -f 'Auth.cpp'; then $(CYGPATH_W) 'Auth.cpp'; else $(CYGPATH_W) '$(srcdir)/Auth.cpp'; fi`

mind-HTMLTemplate.o: HTMLTemplate.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-HTMLTemplate.o -MD -MP -MF $(DEPDIR)/mind-HTMLTemplate.Tpo -c -o mind-HTMLTemplate.o `test -f 'HTMLTemplate.cpp' || echo '$(srcdir)/'`HTMLTemplate.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-HTMLTemplate.Tpo $(DEPDIR)/mind-HTMLTemplate.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='HTMLTemplate.cpp' object='mind-HTMLTemplate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-HTMLTemplate.o `test -f 'HTMLTemplate.cpp' || echo '$(srcdir)/'`HTMLTemplate.cpp

mind-HTMLTemplate.obj: HTMLTemplate.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-HTMLTemplate.obj -MD -MP -MF $(DEPDIR)/mind-HTMLTemplate.Tpo -c -o mind-HTMLTemplate.obj `if test -f 'HTMLTemplate.cpp'; then $(CYGPATH_W) 'HTMLTemplate.cpp'; else $(CYGPATH_W) '$(srcdir)/HTMLTemplate.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-HTMLTemplate.Tpo $(DEPDIR)/mind-HTMLTemplate.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='HTMLTemplate.cpp' object='mind-HTMLTemplate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-HTMLTemplate.obj `if test -f 'HTMLTemplate.cpp'; then $(CYGPATH_W) 'HTMLTemplate.cpp'; else $(CYGPATH_W) '$(srcdir)/HTMLTemplate.cpp'; fi`

mind-LanguageContainer.o: LanguageContainer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-LanguageContainer.o -MD -MP -MF $(DEPDIR)/mind-LanguageContainer.Tpo -c -o mind-LanguageContainer.o `test -f 'LanguageContainer.cpp' || echo '$(srcdir)/'`LanguageContainer.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-LanguageContainer.Tpo $(DEPDIR)/mind-LanguageContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LanguageContainer.cpp' object='mind-LanguageContainer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-LanguageContainer.o `test -f 'LanguageContainer.cpp' || echo '$(srcdir)/'`LanguageContainer.cpp

mind-LanguageContainer.obj: LanguageContainer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-LanguageContainer.obj -MD -MP -MF $(DEPDIR)/mind-LanguageContainer.Tpo -c -o mind-LanguageContainer.obj `if test -f 'LanguageContainer.cpp'; then $(CYGPATH_W) 'LanguageContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/LanguageContainer.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-LanguageContainer.Tpo $(DEPDIR)/mind-LanguageContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='LanguageContainer.cpp' object='mind-LanguageContainer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-LanguageContainer.obj `if test -f 'LanguageContainer.cpp'; then $(CYGPATH_W) 'LanguageContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/LanguageContainer.cpp'; fi`

mind-DynamicURLList.o: DynamicURLList.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-DynamicURLList.o -MD -MP -MF $(DEPDIR)/mind-DynamicURLList.Tpo -c -o mind-DynamicURLList.o `test -f 'DynamicURLList.cpp' || echo '$(srcdir)/'`DynamicURLList.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-DynamicURLList.Tpo $(DEPDIR)/mind-DynamicURLList.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DynamicURLList.cpp' object='mind-DynamicURLList.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-DynamicURLList.o `test -f 'DynamicURLList.cpp' || echo '$(srcdir)/'`DynamicURLList.cpp

mind-DynamicURLList.obj: DynamicURLList.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-DynamicURLList.obj -MD -MP -MF $(DEPDIR)/mind-DynamicURLList.Tpo -c -o mind-DynamicURLList.obj `if test -f 'DynamicURLList.cpp'; then $(CYGPATH_W) 'DynamicURLList.cpp'; else $(CYGPATH_W) '$(srcdir)/DynamicURLList.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-DynamicURLList.Tpo $(DEPDIR)/mind-DynamicURLList.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DynamicURLList.cpp' object='mind-DynamicURLList.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-DynamicURLList.obj `if test -f 'DynamicURLList.cpp'; then $(CYGPATH_W) 'DynamicURLList.cpp'; else $(CYGPATH_W) '$(srcdir)/DynamicURLList.cpp'; fi`

mind-DynamicIPList.o: DynamicIPList.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-DynamicIPList.o -MD -MP -MF $(DEPDIR)/mind-DynamicIPList.Tpo -c -o mind-DynamicIPList.o `test -f 'DynamicIPList.cpp' || echo '$(srcdir)/'`DynamicIPList.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-DynamicIPList.Tpo $(DEPDIR)/mind-DynamicIPList.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DynamicIPList.cpp' object='mind-DynamicIPList.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-DynamicIPList.o `test -f 'DynamicIPList.cpp' || echo '$(srcdir)/'`DynamicIPList.cpp

mind-DynamicIPList.obj: DynamicIPList.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-DynamicIPList.obj -MD -MP -MF $(DEPDIR)/mind-DynamicIPList.Tpo -c -o mind-DynamicIPList.obj `if test -f 'DynamicIPList.cpp'; then $(CYGPATH_W) 'DynamicIPList.cpp'; else $(CYGPATH_W) '$(srcdir)/DynamicIPList.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-DynamicIPList.Tpo $(DEPDIR)/mind-DynamicIPList.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DynamicIPList.cpp' object='mind-DynamicIPList.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-DynamicIPList.obj `if test -f 'DynamicIPList.cpp'; then $(CYGPATH_W) 'DynamicIPList.cpp'; else $(CYGPATH_W) '$(srcdir)/DynamicIPList.cpp'; fi`

mind-ImageContainer.o: ImageContainer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-ImageContainer.o -MD -MP -MF $(DEPDIR)/mind-ImageContainer.Tpo -c -o mind-ImageContainer.o `test -f 'ImageContainer.cpp' || echo '$(srcdir)/'`ImageContainer.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-ImageContainer.Tpo $(DEPDIR)/mind-ImageContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ImageContainer.cpp' object='mind-ImageContainer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-ImageContainer.o `test -f 'ImageContainer.cpp' || echo '$(srcdir)/'`ImageContainer.cpp

mind-ImageContainer.obj: ImageContainer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-ImageContainer.obj -MD -MP -MF $(DEPDIR)/mind-ImageContainer.Tpo -c -o mind-ImageContainer.obj `if test -f 'ImageContainer.cpp'; then $(CYGPATH_W) 'ImageContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/ImageContainer.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-ImageContainer.Tpo $(DEPDIR)/mind-ImageContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ImageContainer.cpp' object='mind-ImageContainer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-ImageContainer.obj `if test -f 'ImageContainer.cpp'; then $(CYGPATH_W) 'ImageContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/ImageContainer.cpp'; fi`

mind-IPList.o: IPList.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-IPList.o -MD -MP -MF $(DEPDIR)/mind-IPList.Tpo -c -o mind-IPList.o `test -f 'IPList.cpp' || echo '$(srcdir)/'`IPList.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-IPList.Tpo $(DEPDIR)/mind-IPList.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='IPList.cpp' object='mind-IPList.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-IPList.o `test -f 'IPList.cpp' || echo '$(srcdir)/'`IPList.cpp

mind-IPList.obj: IPList.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-IPList.obj -MD -MP -MF $(DEPDIR)/mind-IPList.Tpo -c -o mind-IPList.obj `if test -f 'IPList.cpp'; then $(CYGPATH_W) 'IPList.cpp'; else $(CYGPATH_W) '$(srcdir)/IPList.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-IPList.Tpo $(DEPDIR)/mind-IPList.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='IPList.cpp' object='mind-IPList.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-IPList.obj `if test -f 'IPList.cpp'; then $(CYGPATH_W) 'IPList.cpp'; else $(CYGPATH_W) '$(srcdir)/IPList.cpp'; fi`

mind-OptionContainer.o: OptionContainer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-OptionContainer.o -MD -MP -MF $(DEPDIR)/mind-OptionContainer.Tpo -c -o mind-OptionContainer.o `test -f 'OptionContainer.cpp' || echo '$(srcdir)/'`OptionContainer.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-OptionContainer.Tpo $(DEPDIR)/mind-OptionContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='OptionContainer.cpp' object='mind-OptionContainer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-OptionContainer.o `test -f 'OptionContainer.cpp' || echo '$(srcdir)/'`OptionContainer.cpp

mind-OptionContainer.obj: OptionContainer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-OptionContainer.obj -MD -MP -MF $(DEPDIR)/mind-OptionContainer.Tpo -c -o mind-OptionContainer.obj `if test -f 'OptionContainer.cpp'; then $(CYGPATH_W) 'OptionContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/OptionContainer.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-OptionContainer.Tpo $(DEPDIR)/mind-OptionContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='OptionContainer.cpp' object='mind-OptionContainer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-OptionContainer.obj `if test -f 'OptionContainer.cpp'; then $(CYGPATH_W) 'OptionContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/OptionContainer.cpp'; fi`

mind-FOptionContainer.o: FOptionContainer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-FOptionContainer.o -MD -MP -MF $(DEPDIR)/mind-FOptionContainer.Tpo -c -o mind-FOptionContainer.o `test -f 'FOptionContainer.cpp' || echo '$(srcdir)/'`FOptionContainer.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-FOptionContainer.Tpo $(DEPDIR)/mind-FOptionContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FOptionContainer.cpp' object='mind-FOptionContainer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-FOptionContainer.o `test -f 'FOptionContainer.cpp' || echo '$(srcdir)/'`FOptionContainer.cpp

mind-FOptionContainer.obj: FOptionContainer.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-FOptionContainer.obj -MD -MP -MF $(DEPDIR)/mind-FOptionContainer.Tpo -c -o mind-FOptionContainer.obj `if test -f 'FOptionContainer.cpp'; then $(CYGPATH_W) 'FOptionContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/FOptionContainer.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-FOptionContainer.Tpo $(DEPDIR)/mind-FOptionContainer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='FOptionContainer.cpp' object='mind-FOptionContainer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-FOptionContainer.obj `if test -f 'FOptionContainer.cpp'; then $(CYGPATH_W) 'FOptionContainer.cpp'; else $(CYGPATH_W) '$(srcdir)/FOptionContainer.cpp'; fi`

mind-ListManager.o: ListManager.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-ListManager.o -MD -MP -MF $(DEPDIR)/mind-ListManager.Tpo -c -o mind-ListManager.o `test -f 'ListManager.cpp' || echo '$(srcdir)/'`ListManager.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-ListManager.Tpo $(DEPDIR)/mind-ListManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ListManager.cpp' object='mind-ListManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-ListManager.o `test -f 'ListManager.cpp' || echo '$(srcdir)/'`ListManager.cpp

mind-ListManager.obj: ListManager.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-ListManager.obj -MD -MP -MF $(DEPDIR)/mind-ListManager.Tpo -c -o mind-ListManager.obj `if test -f 'ListManager.cpp'; then $(CYGPATH_W) 'ListManager.cpp'; else $(CYGPATH_W) '$(srcdir)/ListManager.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-ListManager.Tpo $(DEPDIR)/mind-ListManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ListManager.cpp' object='mind-ListManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-ListManager.obj `if test -f 'ListManager.cpp'; then $(CYGPATH_W) 'ListManager.cpp'; else $(CYGPATH_W) '$(srcdir)/ListManager.cpp'; fi`

mind-md5.o: md5.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-md5.o -MD -MP -MF $(DEPDIR)/mind-md5.Tpo -c -o mind-md5.o `test -f 'md5.cpp' || echo '$(srcdir)/'`md5.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-md5.Tpo $(DEPDIR)/mind-md5.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='md5.cpp' object='mind-md5.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-md5.o `test -f 'md5.cpp' || echo '$(srcdir)/'`md5.cpp

mind-md5.obj: md5.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-md5.obj -MD -MP -MF $(DEPDIR)/mind-md5.Tpo -c -o mind-md5.obj `if test -f 'md5.cpp'; then $(CYGPATH_W) 'md5.cpp'; else $(CYGPATH_W) '$(srcdir)/md5.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-md5.Tpo $(DEPDIR)/mind-md5.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='md5.cpp' object='mind-md5.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-md5.obj `if test -f 'md5.cpp'; then $(CYGPATH_W) 'md5.cpp'; else $(CYGPATH_W) '$(srcdir)/md5.cpp'; fi`

mind-DownloadManager.o: DownloadManager.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-DownloadManager.o -MD -MP -MF $(DEPDIR)/mind-DownloadManager.Tpo -c -o mind-DownloadManager.o `test -f 'DownloadManager.cpp' || echo '$(srcdir)/'`DownloadManager.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-DownloadManager.Tpo $(DEPDIR)/mind-DownloadManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DownloadManager.cpp' object='mind-DownloadManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-DownloadManager.o `test -f 'DownloadManager.cpp' || echo '$(srcdir)/'`DownloadManager.cpp

mind-DownloadManager.obj: DownloadManager.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-DownloadManager.obj -MD -MP -MF $(DEPDIR)/mind-DownloadManager.Tpo -c -o mind-DownloadManager.obj `if test -f 'DownloadManager.cpp'; then $(CYGPATH_W) 'DownloadManager.cpp'; else $(CYGPATH_W) '$(srcdir)/DownloadManager.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-DownloadManager.Tpo $(DEPDIR)/mind-DownloadManager.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DownloadManager.cpp' object='mind-DownloadManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-DownloadManager.obj `if test -f 'DownloadManager.cpp'; then $(CYGPATH_W) 'DownloadManager.cpp'; else $(CYGPATH_W) '$(srcdir)/DownloadManager.cpp'; fi`

mind-ConfigVar.o: ConfigVar.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-ConfigVar.o -MD -MP -MF $(DEPDIR)/mind-ConfigVar.Tpo -c -o mind-ConfigVar.o `test -f 'ConfigVar.cpp' || echo '$(srcdir)/'`ConfigVar.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-ConfigVar.Tpo $(DEPDIR)/mind-ConfigVar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ConfigVar.cpp' object='mind-ConfigVar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-ConfigVar.o `test -f 'ConfigVar.cpp' || echo '$(srcdir)/'`ConfigVar.cpp

mind-ConfigVar.obj: ConfigVar.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-ConfigVar.obj -MD -MP -MF $(DEPDIR)/mind-ConfigVar.Tpo -c -o mind-ConfigVar.obj `if test -f 'ConfigVar.cpp'; then $(CYGPATH_W) 'ConfigVar.cpp'; else $(CYGPATH_W) '$(srcdir)/ConfigVar.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-ConfigVar.Tpo $(DEPDIR)/mind-ConfigVar.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ConfigVar.cpp' object='mind-ConfigVar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-ConfigVar.obj `if test -f 'ConfigVar.cpp'; then $(CYGPATH_W) 'ConfigVar.cpp'; else $(CYGPATH_W) '$(srcdir)/ConfigVar.cpp'; fi`

mind-ContentScanner.o: ContentScanner.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-ContentScanner.o -MD -MP -MF $(DEPDIR)/mind-ContentScanner.Tpo -c -o mind-ContentScanner.o `test -f 'ContentScanner.cpp' || echo '$(srcdir)/'`ContentScanner.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-ContentScanner.Tpo $(DEPDIR)/mind-ContentScanner.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ContentScanner.cpp' object='mind-ContentScanner.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-ContentScanner.o `test -f 'ContentScanner.cpp' || echo '$(srcdir)/'`ContentScanner.cpp

mind-ContentScanner.obj: ContentScanner.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-ContentScanner.obj -MD -MP -MF $(DEPDIR)/mind-ContentScanner.Tpo -c -o mind-ContentScanner.obj `if test -f 'ContentScanner.cpp'; then $(CYGPATH_W) 'ContentScanner.cpp'; else $(CYGPATH_W) '$(srcdir)/ContentScanner.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-ContentScanner.Tpo $(DEPDIR)/mind-ContentScanner.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ContentScanner.cpp' object='mind-ContentScanner.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-ContentScanner.obj `if test -f 'ContentScanner.cpp'; then $(CYGPATH_W) 'ContentScanner.cpp'; else $(CYGPATH_W) '$(srcdir)/ContentScanner.cpp'; fi`

mind-SocketArray.o: SocketArray.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-SocketArray.o -MD -MP -MF $(DEPDIR)/mind-SocketArray.Tpo -c -o mind-SocketArray.o `test -f 'SocketArray.cpp' || echo '$(srcdir)/'`SocketArray.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-SocketArray.Tpo $(DEPDIR)/mind-SocketArray.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SocketArray.cpp' object='mind-SocketArray.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-SocketArray.o `test -f 'SocketArray.cpp' || echo '$(srcdir)/'`SocketArray.cpp

mind-SocketArray.obj: SocketArray.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-SocketArray.obj -MD -MP -MF $(DEPDIR)/mind-SocketArray.Tpo -c -o mind-SocketArray.obj `if test -f 'SocketArray.cpp'; then $(CYGPATH_W) 'SocketArray.cpp'; else $(CYGPATH_W) '$(srcdir)/SocketArray.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-SocketArray.Tpo $(DEPDIR)/mind-SocketArray.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SocketArray.cpp' object='mind-SocketArray.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-SocketArray.obj `if test -f 'SocketArray.cpp'; then $(CYGPATH_W) 'SocketArray.cpp'; else $(CYGPATH_W) '$(srcdir)/SocketArray.cpp'; fi`

mind-mind.o: mind.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-mind.o -MD -MP -MF $(DEPDIR)/mind-mind.Tpo -c -o mind-mind.o `test -f 'mind.cpp' || echo '$(srcdir)/'`mind.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-mind.Tpo $(DEPDIR)/mind-mind.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mind.cpp' object='mind-mind.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-mind.o `test -f 'mind.cpp' || echo '$(srcdir)/'`mind.cpp

mind-Logger.o: Logger.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-Logger.o -MD -MP -MF $(DEPDIR)/mind-Logger.Tpo -c -o mind-Logger.o `test -f 'Logger.cpp' || echo '$(srcdir)/'`Logger.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-Logger.Tpo $(DEPDIR)/mind-Logger.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Logger.cpp' object='mind-Logger.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@  $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-Logger.o `test -f 'Logger.cpp' || echo '$(srcdir)/'`Logger.cpp

mind-Logger.obj: Logger.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-Logger.obj -MD -MP -MF $(DEPDIR)/mind-Logger.Tpo -c -o mind-Logger.obj `if test -f 'Logger.cpp'; then $(CYGPATH_W) 'Logger.cpp'; else $(CYGPATH_W) '$(srcdir)/Logger.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-Logger.Tpo $(DEPDIR)/mind-Logger.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@      source='Logger.cpp' object='mind-Logger.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@      DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@  $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-Logger.obj `if test -f 'Logger.cpp'; then $(CYGPATH_W) 'Logger.cpp'; else $(CYGPATH_W) '$(srcdir)/Logger.cpp'; fi`

mind-mind.obj: mind.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-mind.obj -MD -MP -MF $(DEPDIR)/mind-mind.Tpo -c -o mind-mind.obj `if test -f 'mind.cpp'; then $(CYGPATH_W) 'mind.cpp'; else $(CYGPATH_W) '$(srcdir)/mind.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-mind.Tpo $(DEPDIR)/mind-mind.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mind.cpp' object='mind-mind.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-mind.obj `if test -f 'mind.cpp'; then $(CYGPATH_W) 'mind.cpp'; else $(CYGPATH_W) '$(srcdir)/mind.cpp'; fi`

mind-clamav.o: contentscanners/clamav.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-clamav.o -MD -MP -MF $(DEPDIR)/mind-clamav.Tpo -c -o mind-clamav.o `test -f 'contentscanners/clamav.cpp' || echo '$(srcdir)/'`contentscanners/clamav.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-clamav.Tpo $(DEPDIR)/mind-clamav.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='contentscanners/clamav.cpp' object='mind-clamav.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-clamav.o `test -f 'contentscanners/clamav.cpp' || echo '$(srcdir)/'`contentscanners/clamav.cpp

mind-clamav.obj: contentscanners/clamav.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-clamav.obj -MD -MP -MF $(DEPDIR)/mind-clamav.Tpo -c -o mind-clamav.obj `if test -f 'contentscanners/clamav.cpp'; then $(CYGPATH_W) 'contentscanners/clamav.cpp'; else $(CYGPATH_W) '$(srcdir)/contentscanners/clamav.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-clamav.Tpo $(DEPDIR)/mind-clamav.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='contentscanners/clamav.cpp' object='mind-clamav.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-clamav.obj `if test -f 'contentscanners/clamav.cpp'; then $(CYGPATH_W) 'contentscanners/clamav.cpp'; else $(CYGPATH_W) '$(srcdir)/contentscanners/clamav.cpp'; fi`

mind-icapscan.o: contentscanners/icapscan.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-icapscan.o -MD -MP -MF $(DEPDIR)/mind-icapscan.Tpo -c -o mind-icapscan.o `test -f 'contentscanners/icapscan.cpp' || echo '$(srcdir)/'`contentscanners/icapscan.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-icapscan.Tpo $(DEPDIR)/mind-icapscan.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='contentscanners/icapscan.cpp' object='mind-icapscan.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-icapscan.o `test -f 'contentscanners/icapscan.cpp' || echo '$(srcdir)/'`contentscanners/icapscan.cpp

mind-icapscan.obj: contentscanners/icapscan.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-icapscan.obj -MD -MP -MF $(DEPDIR)/mind-icapscan.Tpo -c -o mind-icapscan.obj `if test -f 'contentscanners/icapscan.cpp'; then $(CYGPATH_W) 'contentscanners/icapscan.cpp'; else $(CYGPATH_W) '$(srcdir)/contentscanners/icapscan.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-icapscan.Tpo $(DEPDIR)/mind-icapscan.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='contentscanners/icapscan.cpp' object='mind-icapscan.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-icapscan.obj `if test -f 'contentscanners/icapscan.cpp'; then $(CYGPATH_W) 'contentscanners/icapscan.cpp'; else $(CYGPATH_W) '$(srcdir)/contentscanners/icapscan.cpp'; fi`

mind-kavdscan.o: contentscanners/kavdscan.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-kavdscan.o -MD -MP -MF $(DEPDIR)/mind-kavdscan.Tpo -c -o mind-kavdscan.o `test -f 'contentscanners/kavdscan.cpp' || echo '$(srcdir)/'`contentscanners/kavdscan.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-kavdscan.Tpo $(DEPDIR)/mind-kavdscan.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='contentscanners/kavdscan.cpp' object='mind-kavdscan.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-kavdscan.o `test -f 'contentscanners/kavdscan.cpp' || echo '$(srcdir)/'`contentscanners/kavdscan.cpp

mind-kavdscan.obj: contentscanners/kavdscan.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-kavdscan.obj -MD -MP -MF $(DEPDIR)/mind-kavdscan.Tpo -c -o mind-kavdscan.obj `if test -f 'contentscanners/kavdscan.cpp'; then $(CYGPATH_W) 'contentscanners/kavdscan.cpp'; else $(CYGPATH_W) '$(srcdir)/contentscanners/kavdscan.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-kavdscan.Tpo $(DEPDIR)/mind-kavdscan.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='contentscanners/kavdscan.cpp' object='mind-kavdscan.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-kavdscan.obj `if test -f 'contentscanners/kavdscan.cpp'; then $(CYGPATH_W) 'contentscanners/kavdscan.cpp'; else $(CYGPATH_W) '$(srcdir)/contentscanners/kavdscan.cpp'; fi`

mind-clamdscan.o: contentscanners/clamdscan.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-clamdscan.o -MD -MP -MF $(DEPDIR)/mind-clamdscan.Tpo -c -o mind-clamdscan.o `test -f 'contentscanners/clamdscan.cpp' || echo '$(srcdir)/'`contentscanners/clamdscan.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-clamdscan.Tpo $(DEPDIR)/mind-clamdscan.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='contentscanners/clamdscan.cpp' object='mind-clamdscan.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-clamdscan.o `test -f 'contentscanners/clamdscan.cpp' || echo '$(srcdir)/'`contentscanners/clamdscan.cpp

mind-clamdscan.obj: contentscanners/clamdscan.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-clamdscan.obj -MD -MP -MF $(DEPDIR)/mind-clamdscan.Tpo -c -o mind-clamdscan.obj `if test -f 'contentscanners/clamdscan.cpp'; then $(CYGPATH_W) 'contentscanners/clamdscan.cpp'; else $(CYGPATH_W) '$(srcdir)/contentscanners/clamdscan.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-clamdscan.Tpo $(DEPDIR)/mind-clamdscan.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='contentscanners/clamdscan.cpp' object='mind-clamdscan.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-clamdscan.obj `if test -f 'contentscanners/clamdscan.cpp'; then $(CYGPATH_W) 'contentscanners/clamdscan.cpp'; else $(CYGPATH_W) '$(srcdir)/contentscanners/clamdscan.cpp'; fi`

mind-commandlinescan.o: contentscanners/commandlinescan.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-commandlinescan.o -MD -MP -MF $(DEPDIR)/mind-commandlinescan.Tpo -c -o mind-commandlinescan.o `test -f 'contentscanners/commandlinescan.cpp' || echo '$(srcdir)/'`contentscanners/commandlinescan.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-commandlinescan.Tpo $(DEPDIR)/mind-commandlinescan.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='contentscanners/commandlinescan.cpp' object='mind-commandlinescan.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-commandlinescan.o `test -f 'contentscanners/commandlinescan.cpp' || echo '$(srcdir)/'`contentscanners/commandlinescan.cpp

mind-commandlinescan.obj: contentscanners/commandlinescan.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-commandlinescan.obj -MD -MP -MF $(DEPDIR)/mind-commandlinescan.Tpo -c -o mind-commandlinescan.obj `if test -f 'contentscanners/commandlinescan.cpp'; then $(CYGPATH_W) 'contentscanners/commandlinescan.cpp'; else $(CYGPATH_W) '$(srcdir)/contentscanners/commandlinescan.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-commandlinescan.Tpo $(DEPDIR)/mind-commandlinescan.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='contentscanners/commandlinescan.cpp' object='mind-commandlinescan.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-commandlinescan.obj `if test -f 'contentscanners/commandlinescan.cpp'; then $(CYGPATH_W) 'contentscanners/commandlinescan.cpp'; else $(CYGPATH_W) '$(srcdir)/contentscanners/commandlinescan.cpp'; fi`

mind-default.o: downloadmanagers/default.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-default.o -MD -MP -MF $(DEPDIR)/mind-default.Tpo -c -o mind-default.o `test -f 'downloadmanagers/default.cpp' || echo '$(srcdir)/'`downloadmanagers/default.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-default.Tpo $(DEPDIR)/mind-default.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='downloadmanagers/default.cpp' object='mind-default.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-default.o `test -f 'downloadmanagers/default.cpp' || echo '$(srcdir)/'`downloadmanagers/default.cpp

mind-default.obj: downloadmanagers/default.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-default.obj -MD -MP -MF $(DEPDIR)/mind-default.Tpo -c -o mind-default.obj `if test -f 'downloadmanagers/default.cpp'; then $(CYGPATH_W) 'downloadmanagers/default.cpp'; else $(CYGPATH_W) '$(srcdir)/downloadmanagers/default.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-default.Tpo $(DEPDIR)/mind-default.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='downloadmanagers/default.cpp' object='mind-default.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-default.obj `if test -f 'downloadmanagers/default.cpp'; then $(CYGPATH_W) 'downloadmanagers/default.cpp'; else $(CYGPATH_W) '$(srcdir)/downloadmanagers/default.cpp'; fi`

mind-fancy.o: downloadmanagers/fancy.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-fancy.o -MD -MP -MF $(DEPDIR)/mind-fancy.Tpo -c -o mind-fancy.o `test -f 'downloadmanagers/fancy.cpp' || echo '$(srcdir)/'`downloadmanagers/fancy.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-fancy.Tpo $(DEPDIR)/mind-fancy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='downloadmanagers/fancy.cpp' object='mind-fancy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-fancy.o `test -f 'downloadmanagers/fancy.cpp' || echo '$(srcdir)/'`downloadmanagers/fancy.cpp

mind-fancy.obj: downloadmanagers/fancy.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-fancy.obj -MD -MP -MF $(DEPDIR)/mind-fancy.Tpo -c -o mind-fancy.obj `if test -f 'downloadmanagers/fancy.cpp'; then $(CYGPATH_W) 'downloadmanagers/fancy.cpp'; else $(CYGPATH_W) '$(srcdir)/downloadmanagers/fancy.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-fancy.Tpo $(DEPDIR)/mind-fancy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='downloadmanagers/fancy.cpp' object='mind-fancy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-fancy.obj `if test -f 'downloadmanagers/fancy.cpp'; then $(CYGPATH_W) 'downloadmanagers/fancy.cpp'; else $(CYGPATH_W) '$(srcdir)/downloadmanagers/fancy.cpp'; fi`

mind-trickle.o: downloadmanagers/trickle.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-trickle.o -MD -MP -MF $(DEPDIR)/mind-trickle.Tpo -c -o mind-trickle.o `test -f 'downloadmanagers/trickle.cpp' || echo '$(srcdir)/'`downloadmanagers/trickle.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-trickle.Tpo $(DEPDIR)/mind-trickle.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='downloadmanagers/trickle.cpp' object='mind-trickle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-trickle.o `test -f 'downloadmanagers/trickle.cpp' || echo '$(srcdir)/'`downloadmanagers/trickle.cpp

mind-trickle.obj: downloadmanagers/trickle.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-trickle.obj -MD -MP -MF $(DEPDIR)/mind-trickle.Tpo -c -o mind-trickle.obj `if test -f 'downloadmanagers/trickle.cpp'; then $(CYGPATH_W) 'downloadmanagers/trickle.cpp'; else $(CYGPATH_W) '$(srcdir)/downloadmanagers/trickle.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-trickle.Tpo $(DEPDIR)/mind-trickle.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='downloadmanagers/trickle.cpp' object='mind-trickle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-trickle.obj `if test -f 'downloadmanagers/trickle.cpp'; then $(CYGPATH_W) 'downloadmanagers/trickle.cpp'; else $(CYGPATH_W) '$(srcdir)/downloadmanagers/trickle.cpp'; fi`

mind-proxy.o: authplugins/proxy.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-proxy.o -MD -MP -MF $(DEPDIR)/mind-proxy.Tpo -c -o mind-proxy.o `test -f 'authplugins/proxy.cpp' || echo '$(srcdir)/'`authplugins/proxy.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-proxy.Tpo $(DEPDIR)/mind-proxy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='authplugins/proxy.cpp' object='mind-proxy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-proxy.o `test -f 'authplugins/proxy.cpp' || echo '$(srcdir)/'`authplugins/proxy.cpp

mind-proxy.obj: authplugins/proxy.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-proxy.obj -MD -MP -MF $(DEPDIR)/mind-proxy.Tpo -c -o mind-proxy.obj `if test -f 'authplugins/proxy.cpp'; then $(CYGPATH_W) 'authplugins/proxy.cpp'; else $(CYGPATH_W) '$(srcdir)/authplugins/proxy.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-proxy.Tpo $(DEPDIR)/mind-proxy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='authplugins/proxy.cpp' object='mind-proxy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-proxy.obj `if test -f 'authplugins/proxy.cpp'; then $(CYGPATH_W) 'authplugins/proxy.cpp'; else $(CYGPATH_W) '$(srcdir)/authplugins/proxy.cpp'; fi`

mind-ident.o: authplugins/ident.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-ident.o -MD -MP -MF $(DEPDIR)/mind-ident.Tpo -c -o mind-ident.o `test -f 'authplugins/ident.cpp' || echo '$(srcdir)/'`authplugins/ident.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-ident.Tpo $(DEPDIR)/mind-ident.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='authplugins/ident.cpp' object='mind-ident.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-ident.o `test -f 'authplugins/ident.cpp' || echo '$(srcdir)/'`authplugins/ident.cpp

mind-ident.obj: authplugins/ident.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-ident.obj -MD -MP -MF $(DEPDIR)/mind-ident.Tpo -c -o mind-ident.obj `if test -f 'authplugins/ident.cpp'; then $(CYGPATH_W) 'authplugins/ident.cpp'; else $(CYGPATH_W) '$(srcdir)/authplugins/ident.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-ident.Tpo $(DEPDIR)/mind-ident.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='authplugins/ident.cpp' object='mind-ident.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-ident.obj `if test -f 'authplugins/ident.cpp'; then $(CYGPATH_W) 'authplugins/ident.cpp'; else $(CYGPATH_W) '$(srcdir)/authplugins/ident.cpp'; fi`

mind-ip.o: authplugins/ip.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-ip.o -MD -MP -MF $(DEPDIR)/mind-ip.Tpo -c -o mind-ip.o `test -f 'authplugins/ip.cpp' || echo '$(srcdir)/'`authplugins/ip.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-ip.Tpo $(DEPDIR)/mind-ip.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='authplugins/ip.cpp' object='mind-ip.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-ip.o `test -f 'authplugins/ip.cpp' || echo '$(srcdir)/'`authplugins/ip.cpp

mind-ip.obj: authplugins/ip.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-ip.obj -MD -MP -MF $(DEPDIR)/mind-ip.Tpo -c -o mind-ip.obj `if test -f 'authplugins/ip.cpp'; then $(CYGPATH_W) 'authplugins/ip.cpp'; else $(CYGPATH_W) '$(srcdir)/authplugins/ip.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-ip.Tpo $(DEPDIR)/mind-ip.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='authplugins/ip.cpp' object='mind-ip.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-ip.obj `if test -f 'authplugins/ip.cpp'; then $(CYGPATH_W) 'authplugins/ip.cpp'; else $(CYGPATH_W) '$(srcdir)/authplugins/ip.cpp'; fi`

mind-ntlm.o: authplugins/ntlm.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-ntlm.o -MD -MP -MF $(DEPDIR)/mind-ntlm.Tpo -c -o mind-ntlm.o `test -f 'authplugins/ntlm.cpp' || echo '$(srcdir)/'`authplugins/ntlm.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-ntlm.Tpo $(DEPDIR)/mind-ntlm.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='authplugins/ntlm.cpp' object='mind-ntlm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-ntlm.o `test -f 'authplugins/ntlm.cpp' || echo '$(srcdir)/'`authplugins/ntlm.cpp

mind-ntlm.obj: authplugins/ntlm.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-ntlm.obj -MD -MP -MF $(DEPDIR)/mind-ntlm.Tpo -c -o mind-ntlm.obj `if test -f 'authplugins/ntlm.cpp'; then $(CYGPATH_W) 'authplugins/ntlm.cpp'; else $(CYGPATH_W) '$(srcdir)/authplugins/ntlm.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-ntlm.Tpo $(DEPDIR)/mind-ntlm.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='authplugins/ntlm.cpp' object='mind-ntlm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-ntlm.obj `if test -f 'authplugins/ntlm.cpp'; then $(CYGPATH_W) 'authplugins/ntlm.cpp'; else $(CYGPATH_W) '$(srcdir)/authplugins/ntlm.cpp'; fi`

mind-digest.o: authplugins/digest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-digest.o -MD -MP -MF $(DEPDIR)/mind-digest.Tpo -c -o mind-digest.o `test -f 'authplugins/digest.cpp' || echo '$(srcdir)/'`authplugins/digest.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-digest.Tpo $(DEPDIR)/mind-digest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='authplugins/digest.cpp' object='mind-digest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-digest.o `test -f 'authplugins/digest.cpp' || echo '$(srcdir)/'`authplugins/digest.cpp

mind-digest.obj: authplugins/digest.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -MT mind-digest.obj -MD -MP -MF $(DEPDIR)/mind-digest.Tpo -c -o mind-digest.obj `if test -f 'authplugins/digest.cpp'; then $(CYGPATH_W) 'authplugins/digest.cpp'; else $(CYGPATH_W) '$(srcdir)/authplugins/digest.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/mind-digest.Tpo $(DEPDIR)/mind-digest.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='authplugins/digest.cpp' object='mind-digest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mind_CPPFLAGS) $(CPPFLAGS) $(mind_CXXFLAGS) $(CXXFLAGS) -c -o mind-digest.obj `if test -f 'authplugins/digest.cpp'; then $(CYGPATH_W) 'authplugins/digest.cpp'; else $(CYGPATH_W) '$(srcdir)/authplugins/digest.cpp'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(sbindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-sbinPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-sbinPROGRAMS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-sbinPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-sbinPROGRAMS ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-sbinPROGRAMS install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-sbinPROGRAMS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
